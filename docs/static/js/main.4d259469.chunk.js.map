{"version":3,"sources":["img/Logo.png","Services/local-storage.js","components/Card.js","components/CharacternotFound.js","components/CharactersList.js","components/FilterName.js","components/FilterSpecie.js","components/Filters.js","components/CharacterDetail.js","components/Pagination.js","components/App.js","index.js"],"names":["obj","get","key","defaultData","data","localStorage","getItem","JSON","parse","set","value","setItem","stringify","Card","props","className","to","id","src","img","alt","name","species","CharacterNotFound","CharactersList","characters","length","character","filterName","charactersElements","map","status","episode","origin","FilterName","type","placeholder","onChange","ev","handleFilter","target","FilterSpecie","htmlFor","filterSpecies","Filters","onSubmit","preventDefault","onClick","handleReset","CharacterDetail","speciesStatus","getStatus","Pagination","nextPage","prevPage","goToPage","pages","pageButtons","i","push","App","useState","loading","setLoading","ls","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","setPages","setcharacters","setFilterName","setFilterSpecies","useEffect","url","a","fetch","res","json","orderResults","results","sort","b","cleanData","image","info","next","prev","fetchData","filtercharacters","filter","toLowerCase","includes","Logo","exact","path","num","render","routerProps","routerId","match","params","Id","characterFound","find","element","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d259469.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.de13d484.png\";","/*Siempre tenemos un key un valor\r\n */\r\n\r\nconst get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (\r\n    data === null\r\n    /*no tienes datos\r\n      me devuelves los predefinido en este caso un array vacio */\r\n  ) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n/*Para que te salga errores aunque funciona sin lo del objeto*/\r\nconst obj = {\r\n  get: get,\r\n  set: set,\r\n};\r\n\r\nexport default obj;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n  const getSpecies = () => {\r\n    const speciesType = props.species;\r\n    if (speciesType === \"Alien\") {\r\n      return \"fab fa-reddit-alien\";\r\n    } else {\r\n      return \"fas fa-user-alt\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article className=\"cardSingle\">\r\n      <Link className=\"link\" to={`/character/${props.id}`}>\r\n        <img\r\n          className=\"link list__card__img\"\r\n          src={props.img}\r\n          alt={props.name}\r\n        />\r\n      </Link>\r\n      <h2 className=\"cardTittle\">{props.name}</h2>\r\n      <i className={`${getSpecies()}`}></i>\r\n      {props.species}\r\n      <div className=\"information\">\r\n        <Link className=\"link\" to={`/character/${props.id}`}>\r\n          Más información <i className=\"icon fas fa-chevron-right\"></i>\r\n        </Link>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst CharacterNotFound = (props) => {\r\n  return (\r\n    <div>\r\n      <section className=\"characterNotFound\">\r\n        <h3 className=\"tittle3\">\r\n          No hay ningún personaje que coincida con tu búsqueda\r\n        </h3>\r\n        <img\r\n          className=\"characterNotFound__img\"\r\n          src=\"https://media.giphy.com/media/l41lI4bYmcsPJX9Go/giphy.gif\"\r\n          alt=\"Rick\"\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterNotFound;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport CharacterNotFound from \"./CharacternotFound\";\r\n\r\nconst CharactersList = (props) => {\r\n  if (props.characters.length === 0) {\r\n    return <CharacterNotFound character={props.filterName} />;\r\n  }\r\n  const charactersElements = props.characters.map((character) => {\r\n    return (\r\n      <li className=\"list__card\" key={character.id}>\r\n        <Card\r\n          id={character.id}\r\n          img={character.img}\r\n          name={character.name}\r\n          species={character.species}\r\n          status={character.status}\r\n          episode={character.episode}\r\n          origin={character.origin}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul className=\"list\">{charactersElements}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharactersList;\r\n","import React from \"react\";\r\nconst FilterName = (props) => {\r\n  /*Pasamos los datos limpios al componente cuando cambia el evento (lifiting)\r\n   */\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"form__name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={props.filterName}\r\n        placeholder=\"Busca a tu personaje\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterName;\r\n","import React from \"react\";\r\nconst FilterSpecie = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"species\",\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"form__container\">\r\n      <label className=\"form__specie\" htmlFor=\"specie\">\r\n        Tipo de especie\r\n      </label>\r\n      <select\r\n        className=\"form__types\"\r\n        name=\"specie\"\r\n        id=\"specie\"\r\n        onChange={handleChange}\r\n        value={props.filterSpecies}\r\n      >\r\n        <option value=\"\">Todas</option>\r\n        <option value=\"Human\">Humano</option>\r\n        <option value=\"Alien\">Alienígena</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterSpecie;\r\n","import React from \"react\";\r\nimport FilterName from \"./FilterName\";\r\nimport FilterSpecie from \"./FilterSpecie\";\r\n\r\nconst Filters = (props) => {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <section>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <FilterName\r\n          filterName={props.filterName}\r\n          handleFilter={props.handleFilter}\r\n        ></FilterName>\r\n        <FilterSpecie\r\n          handleFilter={props.handleFilter}\r\n          filterSpecies={props.filterSpecies}\r\n        ></FilterSpecie>\r\n        <button className=\"reset_buttton\" onClick={props.handleReset}>\r\n          <i className=\"far fa-trash-alt\"></i> Reset\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const getStatus = () => {\r\n    const speciesStatus = props.character.status;\r\n    if (speciesStatus === \"Dead\") {\r\n      return \"fas fa-skull-crossbones\";\r\n    } else if (speciesStatus === \"Alive\") {\r\n      return \"fas fa-heart\";\r\n    } else {\r\n      return \"fas fa-question\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"carhacterDetail\">\r\n      <Link to=\"/\" className=\"link\">\r\n        <i className=\"icon fas fa-chevron-left\"></i>\r\n        Volver\r\n      </Link>\r\n      <section className=\"detail\">\r\n        <img\r\n          className=\"detail__img\"\r\n          src={props.character.img}\r\n          alt={props.name}\r\n        />\r\n        <h2 className=\"detail__title2\">{props.character.name}</h2>\r\n        <ul className=\"detail__inform\">\r\n          <li className=\"detail__inform__text\">\r\n            <i className={`icon ${getStatus()}`}> </i>\r\n            {props.character.status}\r\n          </li>\r\n          <li className=\"detail__inform__text\">\r\n            Origen: {props.character.origin}\r\n          </li>\r\n          <li className=\"detail__inform__text\">\r\n            Episode: {props.character.episode}\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({ nextPage, prevPage, goToPage, pages }) => {\r\n  let pageButtons = [];\r\n  for (let i = 1; i <= pages; i++) {\r\n    pageButtons.push(\r\n      <button key={i} onClick={() => goToPage(i)}>\r\n        {i}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      <button className=\"pagination__button\" onClick={prevPage}>\r\n        <i className=\"icon fas fa-arrow-left\"></i>\r\n        Previous\r\n      </button>\r\n\r\n      <button className=\"pagination__button\" onClick={nextPage}>\r\n        Next\r\n        <i className=\"icon fas fa-arrow-right\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import \"../stylesheets/App.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Logo from \"../img/Logo.png\";\nimport ls from \"../Services/local-storage\";\nimport CharactersList from \"../components/CharactersList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport CharacterNotFound from \"./CharacternotFound\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"./Pagination\";\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n\n  const [currentPageUrl, setCurrentPageUrl] = useState(\n    ls.get(\"currentPageUrl\", \"https://rickandmortyapi.com/api/character?\")\n  );\n  const [nextPageUrl, setNextPageUrl] = useState(ls.get(\"nextPageUrl\", []));\n  const [prevPageUrl, setPrevPageUrl] = useState(ls.get(\"prevPageUrl\", []));\n  const [pages, setPages] = useState(ls.get(\"pages\", []));\n  /*Un array vacío para definir el estado inicial\n   pasa una key y un valor defaulft*/\n  const [characters, setcharacters] = useState(ls.get(\"characters\", []));\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterSpecies, setFilterSpecies] = useState(\n    ls.get(\"filterSpecies\", \"\")\n  );\n  useEffect(() => {\n    ls.set(\"pages\", pages);\n    ls.set(\"currentPageUrl\", currentPageUrl);\n    ls.set(\"nextPageUrl\", nextPageUrl);\n    ls.set(\"prevPageUrl\", prevPageUrl);\n    ls.set(\"character\", characters);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterSpecies\", filterSpecies);\n  }, [\n    currentPageUrl,\n    prevPageUrl,\n    nextPageUrl,\n    pages,\n    characters,\n    filterName,\n    filterSpecies,\n  ]);\n\n  const handleReset = () => {\n    setFilterName(\"\");\n    setFilterSpecies(\"\");\n  };\n  const renderCharacterDetail = (routerProps) => {\n    const routerId = routerProps.match.params.Id;\n\n    const characterFound = characters.find(\n      (element) => element.id === parseInt(routerId)\n    );\n\n    if (characterFound) {\n      return <CharacterDetail character={characterFound} />;\n    } else {\n      return <CharacterNotFound></CharacterNotFound>;\n    }\n  };\n\n  /*Empieza ejecutarse en la parte de montaje y es lo que hace que salga los datos\n   */\n\n  useEffect(() => {\n    const url = currentPageUrl;\n    setLoading(true);\n    const fetchData = async () => {\n      const res = await fetch(url);\n      const data = await res.json();\n      const orderResults = data.results.sort((a, b) =>\n        a.name > b.name ? 1 : a.name < b.name ? -1 : 0\n      );\n      const cleanData = orderResults.map((character) => {\n        return {\n          id: character.id,\n          img: character.image,\n          name: character.name,\n          species: character.species,\n          status: character.status,\n          origin: character.origin.name,\n          episode: character.episode.length,\n        };\n      });\n      setcharacters(cleanData);\n      setLoading(false);\n      setNextPageUrl(data.info.next);\n      setPrevPageUrl(data.info.prev);\n      setPages(data.info.pages);\n    };\n    fetchData();\n  }, [currentPageUrl]);\n\n  function nextPage() {\n    setCurrentPageUrl(nextPageUrl);\n  }\n\n  function prevPage() {\n    setCurrentPageUrl(prevPageUrl);\n  }\n\n  function goToPage(num) {\n    setCurrentPageUrl(`https://rickandmortyapi.com/api/character?page=${num}`);\n  }\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      setFilterSpecies(data.value);\n    }\n  };\n  /* Data un parametro x que se le pasa a la función para que te recoja los value */\n\n  const filtercharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter((character) => {\n      if (filterSpecies === \"\") {\n        return true;\n      } else {\n        return character.species === filterSpecies;\n      }\n    });\n\n  if (loading) return \"Loading...\";\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"logo\">\n          <Link to=\"/\">\n            <img className=\"logo\" src={Logo} alt=\"Logo Rick and morty\"></img>\n          </Link>\n        </h1>\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              handleReset={handleReset}\n              handleFilter={handleFilter}\n              filterName={filterName}\n              filterSpecies={filterSpecies}\n            ></Filters>\n\n            <CharactersList characters={filtercharacters}></CharactersList>\n            <Pagination\n              nextPage={nextPageUrl ? nextPage : null}\n              prevPage={prevPageUrl ? prevPage : null}\n              goToPage={goToPage}\n            />\n          </Route>\n          <Route path=\"/character/:Id\" render={renderCharacterDetail} />\n        </Switch>\n      </main>\n      <footer className=\"footer\">\n        <small> Lucía Rodríguez Nova </small>\n        <img\n          className=\"img__logo\"\n          src=\"./rickandmorty.ico\"\n          alt=\"Logo Rick and morty\"\n        ></img>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.css\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}