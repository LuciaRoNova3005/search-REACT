{"version":3,"sources":["img/Logo.png","Services/local-storage.js","Services/Api.js","components/Card.js","components/CharacternotFound.js","components/CharactersList.js","components/FilterName.js","components/FilterSpecie.js","components/Filters.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["obj","get","key","defaultData","data","localStorage","getItem","JSON","parse","set","value","setItem","stringify","getApiData","fetch","then","response","json","results","sort","a","b","name","map","character","id","img","image","species","status","origin","episode","length","Card","props","className","src","alt","to","CharacterNotFound","CharactersList","characters","filterName","charactersElements","FilterName","type","placeholder","onChange","ev","handleFilter","target","FilterSpecie","htmlFor","filterSpecies","Filters","onSubmit","preventDefault","onClick","handleReset","CharacterDetail","speciesStatus","getStatus","App","useState","ls","setcharacters","setFilterName","setFilterSpecies","useEffect","charactersData","filtercharacters","filter","toLowerCase","includes","Logo","exact","path","render","routerProps","routerId","match","params","Id","characterFound","find","element","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5b97ecb4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.de13d484.png\";","/*Siempre tenemos un key un valor\r\n */\r\n\r\nconst get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (\r\n    data === null\r\n    /*no tienes datos\r\n      me devuelves los predefinido en este caso un array vacio */\r\n  ) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n/*Para que te salga errores aunque funciona sin lo del objeto*/\r\nconst obj = {\r\n  get: get,\r\n  set: set,\r\n};\r\n\r\nexport default obj;\r\n","const getApiData = () => {\r\n  return (\r\n    fetch(\"https://rickandmortyapi.com/api/character\")\r\n      /*Hay que retornar el fecth para que no salga undefined\r\n       */\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        /*Tenemos los datos de la api y los limpiamos\r\n         sort() invoca una función que recibe dos valores y los compara*/\r\n        const orderResults = data.results.sort((a, b) =>\r\n          a.name > b.name ? 1 : a.name < b.name ? -1 : 0\r\n        );\r\n        const cleanData = orderResults.map((character) => {\r\n          return {\r\n            id: character.id,\r\n            img: character.image,\r\n            name: character.name,\r\n            species: character.species,\r\n            status: character.status,\r\n            origin: character.origin.name,\r\n            episode: character.episode.length,\r\n          };\r\n        });\r\n        return cleanData;\r\n      })\r\n  );\r\n};\r\nexport default getApiData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n  const getSpecies = () => {\r\n    const speciesType = props.species;\r\n    if (speciesType === \"Alien\") {\r\n      return \"fab fa-reddit-alien\";\r\n    } else {\r\n      return \"fas fa-user-alt\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <article className=\"cardSingle\">\r\n      <img className=\"imgCard\" src={props.img} alt={props.name} />\r\n      <h2 className=\"cardTittle\">{props.name}</h2>\r\n      <i className={`${getSpecies()}`}></i>\r\n      {props.species}\r\n      <div className=\"information\">\r\n        <Link className=\"link\" to={`/character/${props.id}`}>\r\n          Más información{\" \"}\r\n        </Link>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst CharacterNotFound = (props) => {\r\n  return (\r\n    <div>\r\n      <section className=\"characterNotFound\">\r\n        <h3 className=\"tittle3\">\r\n          No hay ningún personaje que coincida con tu búsqueda\r\n        </h3>\r\n        <img\r\n          className=\"characterNotFound__img\"\r\n          src=\"https://media.giphy.com/media/l41lI4bYmcsPJX9Go/giphy.gif\"\r\n          alt=\"Rick\"\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterNotFound;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport CharacterNotFound from \"./CharacternotFound\";\r\n\r\nconst CharactersList = (props) => {\r\n  if (props.characters.length === 0) {\r\n    return <CharacterNotFound character={props.filterName} />;\r\n  }\r\n  const charactersElements = props.characters.map((character) => {\r\n    return (\r\n      <li className=\"card\" key={character.id}>\r\n        <Card\r\n          id={character.id}\r\n          img={character.img}\r\n          name={character.name}\r\n          species={character.species}\r\n          status={character.status}\r\n          episode={character.episode}\r\n          origin={character.origin}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <ul className=\"card-list\">{charactersElements}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharactersList;\r\n","import React from \"react\";\r\nconst FilterName = (props) => {\r\n  /*Pasamos los datos limpios al componente cuando cambia el evento (lifiting)\r\n   */\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"form__name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={props.filterName}\r\n        placeholder=\"Busca a tu personaje\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterName;\r\n","import React from \"react\";\r\nconst FilterSpecie = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"species\",\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"form__container\">\r\n      <label className=\"form__specie\" htmlFor=\"specie\">\r\n        Especie\r\n      </label>\r\n      <select\r\n        className=\"form__types\"\r\n        name=\"specie\"\r\n        id=\"specie\"\r\n        onChange={handleChange}\r\n        value={props.filterSpecies}\r\n      >\r\n        <option value=\"\">Todos los tipos</option>\r\n        <option value=\"Human\">Humano</option>\r\n        <option value=\"Alien\">Alienígena</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterSpecie;\r\n","import React from \"react\";\r\nimport FilterName from \"./FilterName\";\r\nimport FilterSpecie from \"./FilterSpecie\";\r\n\r\nconst Filters = (props) => {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <section>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <FilterName\r\n          filterName={props.filterName}\r\n          handleFilter={props.handleFilter}\r\n        ></FilterName>\r\n        <FilterSpecie\r\n          handleFilter={props.handleFilter}\r\n          value={props.filterSpecies}\r\n        ></FilterSpecie>\r\n        <button className=\"reset_buttton\" onClick={props.handleReset}>\r\n          <i className=\"far fa-trash-alt\"></i> Reset\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const getStatus = () => {\r\n    const speciesStatus = props.character.status;\r\n    if (speciesStatus === \"Dead\") {\r\n      return \"fas fa-skull-crossbones\";\r\n    } else if (speciesStatus === \"Alive\") {\r\n      return \"fas fa-thumbs-up\";\r\n    } else {\r\n      return \"fas fa-question\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"carhacterDetail\">\r\n      <Link to=\"/\" className=\"link\">\r\n        Volver\r\n      </Link>\r\n      <section className=\"detail\">\r\n        <img\r\n          className=\"detail__img\"\r\n          src={props.character.img}\r\n          alt={props.name}\r\n        />\r\n        <h2 className=\"detail__title2\">{props.character.name}</h2>\r\n        <ul className=\"detail__inform\">\r\n          <li className=\"detail__inform__text\">\r\n            <i className={`icon ${getStatus()}`}> {props.character.status}</i>\r\n          </li>\r\n          <li className=\"detail__inform__text\">\r\n            Origen: {props.character.origin}\r\n          </li>\r\n          <li className=\"detail__inform__text\">\r\n            Episode: {props.character.episode}\r\n          </li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import \"../stylesheets/App.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Logo from \"../img/Logo.png\";\nimport ls from \"../Services/local-storage\";\nimport getApiData from \"../Services/Api\";\nimport CharactersList from \"../components/CharactersList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport CharacterNotFound from \"./CharacternotFound\";\nimport { Link } from \"react-router-dom\";\n\nconst App = () => {\n  /*Un array vacío para definir el estado inicial\n   pasa una key y un valor defaulft*/\n  const [characters, setcharacters] = useState(ls.get(\"characters\", []));\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\n  const [filterSpecies, setFilterSpecies] = useState(\n    ls.get(\"filterSpecies\", \"\")\n  );\n  /* Reset */\n  const handleReset = () => {\n    setFilterName(\"\");\n    setFilterSpecies(\"\");\n  };\n  const renderCharacterDetail = (routerProps) => {\n    const routerId = routerProps.match.params.Id;\n\n    const characterFound = characters.find(\n      (element) => element.id === parseInt(routerId)\n    );\n\n    if (characterFound) {\n      return <CharacterDetail character={characterFound} />;\n    } else {\n      return <CharacterNotFound></CharacterNotFound>;\n    }\n  };\n\n  /*Empieza ejecutarse en la parte de montaje y es lo que hace que salga los datos\n   */\n  useEffect(() => {\n    /*Si el array esta vacío no accedes al locastorage\n     */\n    if (characters.length === 0) {\n      getApiData().then((charactersData) => {\n        setcharacters(charactersData);\n      });\n    }\n  }, []);\n  /*Parámetro que nos indica cuando debe ejecutarse el useEffect\n   */\n\n  useEffect(() => {\n    ls.set(\"character\", characters);\n    ls.set(\"filterName\", filterName);\n    ls.set(\"filterSpecies\", filterSpecies);\n  }, [characters, filterName, filterSpecies]);\n  /*Este Useeffect se ejecuta cuando characters cambia y lo guarda en local*/\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    } else if (data.key === \"species\") {\n      setFilterSpecies(data.value);\n    }\n  };\n  /* Data un parametro x que se le pasa a la función para que te recoja los value */\n\n  const filtercharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(filterName.toLowerCase());\n    })\n    .filter((character) => {\n      if (filterSpecies === \"\") {\n        return true;\n      } else {\n        return character.species === filterSpecies;\n      }\n    });\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"logo\">\n          <Link to=\"/\">\n            <img className=\"logo\" src={Logo} alt=\"Logo Rick and morty\"></img>\n          </Link>\n        </h1>\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              handleReset={handleReset}\n              handleFilter={handleFilter}\n              filterName={filterName}\n              filterSpecies={filterSpecies}\n            ></Filters>\n            <CharactersList characters={filtercharacters}></CharactersList>\n          </Route>\n          <Route path=\"/character/:Id\" render={renderCharacterDetail} />\n        </Switch>\n      </main>\n      <footer className=\"footer\">\n        <small> Lucía Rodríguez Nova </small>\n        <img\n          className=\"img__logo\"\n          src=\"./rickandmorty.ico\"\n          alt=\"Logo Rick and morty\"\n        ></img>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.css\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}